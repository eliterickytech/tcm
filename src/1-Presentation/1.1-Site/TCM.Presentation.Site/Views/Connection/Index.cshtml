@using TCM.Services.Model.Enum;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "_LayoutLogin";
}
@using System.Linq;
@{
    var _connectionModels = (List<TCM.Services.Model.ConnectionModel>)TempData["Connection"];
    List<TCM.Services.Model.ResultSearchModel> searchConnectionUsers = new List<TCM.Services.Model.ResultSearchModel>();


    if (TempData["SearchConnectionUser"] != null)
    {
        searchConnectionUsers = (List<TCM.Services.Model.ResultSearchModel>)TempData["SearchConnectionUser"];
    }

}
<div class="area_home">
    @await Html.PartialAsync("~/Views/Shared/User/_PartialMenu.cshtml")

    @await Html.PartialAsync("~/Views/Shared/User/_PartialSearchConnection.cshtml")

    @await Html.PartialAsync("~/Views/Shared/User/_PartialResultConnection.cshtml")

    @await Html.PartialAsync("~/Views/Shared/User/_PartialFooter.cshtml")
</div>
<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (() => {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        const forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.from(forms).forEach(form => {
            form.addEventListener('submit', event => {
                if (!form.checkValidity()) {
                    event.preventDefault()
                    event.stopPropagation()
                }

                form.classList.add('was-validated')
            }, false)
        })
    })()
</script>
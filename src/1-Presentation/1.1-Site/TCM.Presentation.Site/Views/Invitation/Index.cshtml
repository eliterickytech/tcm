@{
    Layout = "_LayoutLogin";
}
@using System.Linq;
@{
    var _connectionModels = (List<TCM.Services.Model.ConnectionModel>)ViewBag.Connection;
}
<div class="area_home">
    @await Html.PartialAsync("~/Views/Shared/Home/User/_PartialMenu.cshtml")

    @await Html.PartialAsync("~/Views/Shared/Home/User/_PartialSearchConnection.cshtml")

    <div class="area_chats_all">
        <div class="area_texts_chats">

            <div class="my_invitations">
                <a href="chats_unread.html">
                    <h2>My Invitations</h2>
                    <div class="border_unread_u"></div>
                </a>
            </div>
        </div>
    </div>


    <div class="area_user_chats">

        @if (_connectionModels.Any())
            {
                foreach (var item in _connectionModels)
                {
                    <div class="area_user_name_total">
                        <div class="user_name_chat">
                            <div class="user_name_text">
                                <h2>user_name1</h2>
                            </div>
                            <div class="date_chat">
                                <p>09/08/2022</p>
                            </div>
                        </div>

                        <div class="user_name_chat">
                            <div class="message_chat">
                                <h2>Message preview. 324mpx or about 57 characters long... </h2>
                            </div>
                            <div class="number_message">
                                <p>1</p>
                            </div>
                        </div>
                    </div>
                }
            }
        

    </div>

    <input type="submit" name="submit" class="submit" value="SEND A NEW INVITATION">

    @await Html.PartialAsync("~/Views/Shared/Home/User/_PartialFooter.cshtml")
</div>
<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (() => {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        const forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.from(forms).forEach(form => {
            form.addEventListener('submit', event => {
                if (!form.checkValidity()) {
                    event.preventDefault()
                    event.stopPropagation()
                }

                form.classList.add('was-validated')
            }, false)
        })
    })()
</script>
<script type="text/javascript" src="~/js/Invitation.js"></script>

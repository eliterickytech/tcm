@using TCM.Services.Model.Enum;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{

    List<TCM.Services.Model.ResultSearchModel> searchUsers = new List<TCM.Services.Model.ResultSearchModel>();

    if (TempData["SearchRequestUser"] != null)
    {
        searchUsers = (List<TCM.Services.Model.ResultSearchModel>)TempData["SearchRequestUser"];
    }
}

<div class="area_chats_all">
    <div class="area_texts_chats">

        <div class="connections_requests">
            <a asp-action="Index" asp-controller="Connection">
                <h2>My Connection</h2>
                <div class="border_u"></div>
            </a>
        </div>

        <div class="my_connections active">
            <a asp-action="Index" asp-controller="Request">
                <h2>Connection request</h2>
                <div class="border_c"></div>
            </a>
        </div>

    </div>
</div>
<div class="area_user_chats">
    <form data-ajax="true"
          asp-action="AddInvitation"
          asp-controller="Invitation"
          data-ajax-mode="replace"
          data-ajax-method="Post"
          data-ajax-success="OnSuccess"
          data-ajax-loading="#loader">

        @if (searchUsers.Any())
        {
            foreach (var item in searchUsers)
            {
                <div class="area_user_name_total">
                    <div class="user_name_chat">
                        <div class="user_name_text">
                            <h2>@item.Username</h2>
                        </div>
                        <div class="text_color_beige">
                            <p>
                                <button class="invitation-circle-send" data-value="@((int)ConnectionStatusType.Approved)" type="button" title="Request approve">
                                    <i class="bi bi-person-fill-check"></i>
                                </button>
                                <button class="invitation-circle-send send_alert"  id="block" data-value="@((int)ConnectionStatusType.Blocked)" type="button" title="Request block">
                                    <i class="bi bi-person-fill-slash"></i>
                                </button>
                                <button class="invitation-circle-send send_alert" id="cancel" data-value="@((int)ConnectionStatusType.Canceled) " type="button" title="Request cancel">
                                    <i class="bi bi-person-fill-x"></i>
                                </button>
                                <input type="hidden" id="ConnectionId" value="@item.ConnectionId"/> 
                            </p>
                        </div>
                    </div>
                </div>
                <div class="user_name_chat">
                    <div class="message_chat">
                        <h2>@Enum.GetName(typeof(ConnectionStatusType), item.ConnectionStatus) </h2>
                    </div>

                </div>
            }
        }
    </form>

</div>

<script>
    $(document).ready(function (){
        
        $(".invitation-circle-send").click(function () {
            var connectionStatusId = $(this).data("value");
            var connectionId = $("#ConnectionId").val()
            var dinamicText = "" 
            if (connectionStatusId == @((int)ConnectionStatusType.Blocked)){
                sucessText = 'Blocked!'
                dinamicText = "Do you really want to block this user?"
            }
            else if (connectionStatusId == @((int)ConnectionStatusType.Canceled)){
                sucessText = 'Canceled!'
                dinamicText = "Do you really want to cancel this user?"

            }
            else if (connectionStatusId == @((int)ConnectionStatusType.Approved)){
                sucessText = 'Approved!'
                dinamicText = "Do you want to approve this user?"
            }
           
            Swal.fire({        
                title: 'Are you sure?',
                title: dinamicText,
                icon: 'warning',
                showCloseButton: true,
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Confirm',
                cancelButtonText: 'Close',
                allowOutsideClick: () => !Swal.isLoading(),
                allowEscapeKey: false
            }).then((result) => {

                if (result.isConfirmed) {
                    var url = '/Request/Action?connectionStatusId=' + connectionStatusId + '&connectionId=' + connectionId

                    $.ajax({
                        url: url,
                        type: "GET",
                        success: function (data) {
                            Swal.fire(sucessText, '', 'success').then((sucess) => {
                                window.location.href = '/Request/Index'
                            });
                        },
                        error: function (xhr, status, error) {
                            Swal.fire('Error', '', 'error')
                        }
                    });
                }
            });
        });
    });
    //$(document).ready(function () {
    //    $(".send_alert").click(function () {
    //        Swal.fire({
    //            template: '#my-template'
    //        }).then((result) => {

    //            if (result.isConfirmed){
    //                var connectionStatusId = $(this).data("value");
    //                var connectionId = $("#ConnectionId").val()
    //                console.log("connectionstatusId:" + connectionStatusId)
    //                console.log("connectionId:" + connectionId)

    //            };

    //        })
    //    });
    //});

  
    function OnSuccess(data) {
        window.location.href = "/Request/Index"
    }
</script>
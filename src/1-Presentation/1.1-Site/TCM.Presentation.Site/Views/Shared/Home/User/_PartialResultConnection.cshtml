@using TCM.Services.Model.Enum;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{

    List<TCM.Services.Model.ResultSearchModel> searchUsers = new List<TCM.Services.Model.ResultSearchModel>();

    if (TempData["SearchConnectionUser"] != null)
    {
        searchUsers = (List<TCM.Services.Model.ResultSearchModel>)TempData["SearchConnectionUser"];
    }
}
<div class="area_chats_all">
    <div class="area_texts_chats">

        <div class="my_connections active">
            <a href="#">
                <h2>My Connection</h2>
                <div class="border_c"></div>
            </a>
        </div>

        <div class="connections_requests">
            <a asp-action="Index" asp-controller="Request">
                <h2>Connection request</h2>
                <div class="border_u"></div>
            </a>
        </div>

    </div>
</div>

<div class="area_user_chats">
    <form data-ajax="true"
          data-ajax-mode="replace"
          data-ajax-method="Post"
          data-ajax-loading="#loader">

        @if (searchUsers.Any())
        {
            foreach (var item in searchUsers)
            {
                <div class="area_user_name_total">
                    <div class="user_name_chat">
                        <div class="user_name_text">
                            <h2>@item.Username</h2>
                        </div>
                        <div class="text_color_beige">
                            <p>
                                <button @((int)ConnectionStatusType.Approved == @item.ConnectionStatus ? "class=invitation-circle-send send_alert" : "disabled class=invitation-circle-send-disabled send_alert") id="approved" data-userid="@item.ConnectionUserId" data-value="@((int)ConnectionStatusType.Approved)" type="button" title="View profile">
                                    <i class="bi bi-eye-fill"></i>
                                </button>
                                @if (item.ConnectionUserId != 1)
                                {
                                    <button @((int)ConnectionStatusType.Blocked != @item.ConnectionStatus ? "class=invitation-circle-send send_alert" : "disabled class=invitation-circle-send-disabled send_alert") id="block" data-value="@((int)ConnectionStatusType.Blocked)" type="button" title="Request block">
                                        <i class="bi bi-person-fill-slash"></i>
                                    </button>
                                    <button @((int)ConnectionStatusType.Canceled != @item.ConnectionStatus ? "class=invitation-circle-send send_alert" : "disabled class=invitation-circle-send-disabled send_alert") id="cancel" data-value="@((int)ConnectionStatusType.Canceled)" type="button" title="Request cancel">
                                        <i class="bi bi-person-fill-x"></i>
                                    </button>                                    
                                }                                
                                <input type="hidden" id="ConnectionId" value="@item.ConnectionId" />
                            </p>
                        </div>
                    </div>
                </div>
                <div class="user_name_chat">
                    <div class="message_chat">
                        <h2>@Enum.GetName(typeof(ConnectionStatusType), item.ConnectionStatus) </h2>
                    </div>
                </div>
            }
        }
    </form>

</div>
<script>
    $(document).ready(function () {

        $(".invitation-circle-send").click(function () {
            var connectionStatusId = $(this).data("value");
            var connectionId = $("#ConnectionId").val()
            var userId = $(this).data("userid");
            var dinamicText = ""

            if (connectionStatusId == @((int)ConnectionStatusType.Approved)) {
                window.location.href = `/Profile/?connectionUserId=${userId}&isConnection=true&fill=true`
                return;
            }

            else if (connectionStatusId == @((int)ConnectionStatusType.Blocked)) {
                sucessText = 'Blocked!'
                dinamicText = "Do you really want to block this user?"
            }
            else if (connectionStatusId == @((int)ConnectionStatusType.Canceled)) {
                sucessText = 'Canceled!'
                dinamicText = "Do you really want to cancel this user?"
            }

            Swal.fire({
                title: 'Are you sure?',
                title: dinamicText,
                icon: 'warning',
                showCloseButton: true,
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Confirm',
                cancelButtonText: 'Close',
                allowOutsideClick: () => !Swal.isLoading(),
                allowEscapeKey: false
            }).then((result) => {

                if (result.isConfirmed) {
                    var url = '/Connection/Action?connectionStatusId=' + connectionStatusId + '&connectionId=' + connectionId

                    $.ajax({
                        url: url,
                        type: "GET",
                        success: function (data) {
                            Swal.fire(sucessText, '', 'success').then((sucess) => {
                                window.location.href = '/Connection/Index'
                            });
                        },
                        error: function (xhr, status, error) {
                            Swal.fire('Error', '', 'error')
                        }
                    });
                }
            });
        });
    });

</script>
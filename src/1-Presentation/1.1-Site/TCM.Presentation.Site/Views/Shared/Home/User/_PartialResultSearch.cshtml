@using TCM.Services.Model.Enum;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{

    List<TCM.Services.Model.ResultSearchModel> searchUsers = new List<TCM.Services.Model.ResultSearchModel>();

    if (TempData["SearchUser"] != null)
    {
        searchUsers = (List<TCM.Services.Model.ResultSearchModel>)TempData["SearchUser"];
    }
}

    <div class="area_chats_all">
        <div class="area_texts_chats">

            <div class="my_invitations">
                <a href="chats_unread.html">
                    <h2>My Search</h2>
                    <div class="border_unread_u"></div>
                </a>
            </div>
        </div>
    </div>
    <div class="area_user_chats">
        <form data-ajax="true"
          asp-action="AddInvitation"
          asp-controller="Invitation"
          data-ajax-mode="replace"
          data-ajax-method="Post"
          data-ajax-loading="#loader">
        
            @if (searchUsers.Any())
            {
                foreach (var item in searchUsers)
                {
                    <div class="area_user_name_total">
                        <div class="user_name_chat">
                            <div class="user_name_text">
                                <h2>@item.Username</h2>
                            </div>
                            <div class="text_color_beige">
                                <p>
                                @{
                                    if (item.IsConnection && item.ConnectionStatus == (int)ConnectionStatusType.Requested)
                                    {
                                        <button class="invitation-circle-send" type="button" disabled title="Request already sent">
                                            <i class="bi bi-person-fill-exclamation"></i>
                                        </button>
                                    }
                                    else if (item.IsConnection && item.ConnectionStatus == (int)ConnectionStatusType.Pending)
                                    {
                                        <button class="invitation-circle-send" type="button" disabled title="Pending request">
                                            <i class="bi bi-person-fill-exclamation"></i>
                                        </button>

                                    }
                                    else if (item.IsConnection && item.ConnectionStatus == (int)ConnectionStatusType.Blocked)
                                    {
                                        <button class="invitation-circle-send" type="button" disabled title="Blocked user">
                                            <i class="bi bi-person-fill-slash"></i>
                                        </button>
                                    }
                                    else if (item.IsConnection && item.ConnectionStatus == (int)ConnectionStatusType.Approved)
                                    {
                                        <button @((int)ConnectionStatusType.Approved == @item.ConnectionStatus ? "class=invitation-circle-send send_alert" : "style=display:none disabled class=invitation-circle-send-disabled send_alert") id="approved" data-userid="@item.ConnectionUserId" data-value="@((int)ConnectionStatusType.Approved)" type="button" title="View profile">
                                            <i class="bi bi-eye-fill"></i>
                                        </button>
                                    }
                                    else
                                    {
                                        <input type="hidden" id="ConnectionUserId" name="ConnectionUserId" value="@item.ConnectionUserId" />
                                        <button data-connetionuserid="@item.ConnectionUserId" data-value="@((int)ConnectionStatusType.Approved)" class="invitation-circle-send" type="submit" title="Add Connection">
                                            <i class="bi bi-person-fill-add"></i>
                                        </button>
                                    }                                    
                                }
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="user_name_chat">
                        <div class="message_chat">
                            <h2>
                                @string.Format("{0} collections completed", item.CountCollection.ToString())
                                
                            </h2>
                        </div>

                    </div>
                }
            }
        </form>

    </div>
@*    <script>
        function OnSuccess(data){
            window.location.href = "/Connection/Index"
        }

    </script>*@
<script>
    $(document).ready(function () {

        $(".invitation-circle-send").click(function () {
            var connectionStatusId = $(this).data("value");
            var connectionId = $("#ConnectionId").val()
            var userId = $(this).data("userid");
            var dinamicText = ""

            if (connectionStatusId == @((int)ConnectionStatusType.Approved)) {
                window.location.href = `/Profile/?connectionUserId=${userId}&isConnection=true&fill=true`
                return;
            }

            else if (connectionStatusId == @((int)ConnectionStatusType.Blocked)) {
                sucessText = 'Blocked!'
                dinamicText = "Do you really want to block this user?"
            }
            else if (connectionStatusId == @((int)ConnectionStatusType.Canceled)) {
                sucessText = 'Canceled!'
                dinamicText = "Do you really want to cancel this user?"
            }

            if (connectionStatusId == @((int)ConnectionStatusType.Approved)) {

                var url = '/Connection/Action?connectionStatusId=' + connectionStatusId + '&connectionId=' + connectionId

                $.ajax({
                    url: url,
                    type: "GET",
                    success: function (data) {
                        window.location.href = '/Connection/Index'
                    },
                    error: function (xhr, status, error) {
                        Swal.fire('Error', '', 'error')
                    }
                });

            }
            else{
                Swal.fire({
                    title: 'Are you sure?',
                    title: dinamicText,
                    icon: 'warning',
                    showCloseButton: true,
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Confirm',
                    cancelButtonText: 'Close',
                    allowOutsideClick: () => !Swal.isLoading(),
                    allowEscapeKey: false
                }).then((result) => {

                    if (result.isConfirmed) {
                        var url = '/Connection/Action?connectionStatusId=' + connectionStatusId + '&connectionId=' + connectionId

                        $.ajax({
                            url: url,
                            type: "GET",
                            success: function (data) {


                                Swal.fire(sucessText, '', 'success').then((sucess) => {
                                    window.location.href = '/Connection/Index'
                                });

                            },
                            error: function (xhr, status, error) {
                                Swal.fire('Error', '', 'error')
                            }
                        });
                    }
                });
            }

        });
    });

</script>
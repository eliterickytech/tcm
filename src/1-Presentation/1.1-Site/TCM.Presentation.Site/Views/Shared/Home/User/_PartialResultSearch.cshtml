@using TCM.Services.Model.Enum;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{

    List<TCM.Services.Model.ResultSearchModel> searchUsers = new List<TCM.Services.Model.ResultSearchModel>();

    if (TempData["SearchUser"] != null)
    {
        searchUsers = (List<TCM.Services.Model.ResultSearchModel>)TempData["SearchUser"];
    }
}

    <div class="area_chats_all">
        <div class="area_texts_chats">

            <div class="my_invitations">
                <a href="chats_unread.html">
                    <h2>My Search</h2>
                    <div class="border_unread_u"></div>
                </a>
            </div>
        </div>
    </div>
    <div class="area_user_chats">
        <form data-ajax="true"
          asp-action="AddInvitation"
          asp-controller="Invitation"
          data-ajax-mode="replace"
          data-ajax-method="Post"
          data-ajax-success="OnSuccess"
          data-ajax-loading="#loader">
        
            @if (searchUsers.Any())
            {
                foreach (var item in searchUsers)
                {
                    <div class="area_user_name_total">
                        <div class="user_name_chat">
                            <div class="user_name_text">
                                <h2>@item.Username</h2>
                            </div>
                            <div class="text_color_beige">
                                <p>
                                @{
                                    if (item.IsConnection && item.ConnectionStatus == (int)ConnectionStatusType.Requested)
                                    {
                                        <button class="invitation-circle-send" type="button" disabled title="Request already sent">
                                            <i class="bi bi-person-fill-exclamation"></i>
                                        </button>
                                    }
                                    else if (item.IsConnection && item.ConnectionStatus == (int)ConnectionStatusType.Pending)
                                    {
                                        <button class="invitation-circle-send" type="button" disabled title="Pending request">
                                            <i class="bi bi-person-fill-exclamation"></i>
                                        </button>

                                    }
                                    else if (item.IsConnection && item.ConnectionStatus == (int)ConnectionStatusType.Blocked)
                                    {
                                        <button class="invitation-circle-send" type="button" disabled title="Blocked user">
                                            <i class="bi bi-person-fill-slash"></i>
                                        </button>
                                    }
                                    else if (item.IsConnection && item.ConnectionStatus == (int)ConnectionStatusType.Approved)
                                    {
                                        <button class="invitation-circle-send" disabled type="button" title="Connection approved">
                                            <i class="bi bi-people-fill"></i>
                                        </button>
                                    }
                                    else
                                    {
                                        <input type="hidden" id="ConnectionUserId" name="ConnectionUserId" value="@item.ConnectionUserId" />
                                        <button data-connetionuserid="@item.ConnectionUserId" class="invitation-circle-send" type="submit" title="Add Connection">
                                            <i class="bi bi-person-fill-add"></i>
                                        </button>
                                    }
                                    
                                }
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="user_name_chat">
                        <div class="message_chat">
                            <h2>
                                @string.Format("{0} collections completed", item.CountCollection.ToString())
                                
                            </h2>
                        </div>

                    </div>
                }
            }
        </form>

    </div>
    <script>
        function OnSuccess(data){
            window.location.href = "/Connection/Index"
        }
    </script>


@{
    var model = (TCM.Presentation.Site.Models.HomeViewModel)TempData["Model"];
}
@inject TCM.Services.Interfaces.Services.ICollectionItemServices _collectionItemServices
@inject TCM.Services.Interfaces.Services.ICollectionItemUserServices _collectionItemUserServices

<div class="area_grid_collectible">
    <div class="area_grid_collectible_int">
        <!-- Carousel -->
        <div id="carouselCollectionIndicators" class="carousel" data-bs-ride="carousel">

            <!-- Indicators/dots -->
            <div class="carousel-indicators" id="carouselIndicators">
                @for (int i = 0; i < model.CollectionsModel.Count; i++)
                {
                    <li data-bs-target="#carouselCollectionIndicators" data-bs-slide-to="@i" @(i == 0 ? "class=active" : "")></li>
                }
            </div>

            <div class="area_texts_collectible">

                <div class="title_collectible">
                    <h2>My collectable delights</h2>
                </div>

@*                <div class="page_collectible">
                    <p>Page 1</p>
                    <img src="img/arrow_down.png" alt="">
                </div>*@

            </div>


            <!-- The slideshow/carousel -->
            <div class="carousel-inner" id="carouselInner">
                @for (int i = 0; i < model.CollectionsModel.Count; i++)
                {                    
                    var collectionItems =( await _collectionItemServices.GetCollectionItemAsync(model.CollectionsModel[i].Id)).Where(x => x.CollectionItemTypeIsCollectible).ToList();

                    var styleGrid = "";
                    var colspanGrid = 0;

                    if (model.CollectionsModel[i].CollectionTypeQuantity == 1)
                    {
                       styleGrid = "grid-auto-columns-1";
                    }
                    else if (model.CollectionsModel[i].CollectionTypeQuantity == 4)
                    {
                        styleGrid = "grid_template_collectible_2x2";
                        colspanGrid = 2;
                    }
                    else if (model.CollectionsModel[i].CollectionTypeQuantity == 9)
                    {
                        styleGrid = "grid_template_collectible_3x3";
                        colspanGrid = 3;
                    }

                    <div class="carousel-item @(i == 0 ? "active" : "")">
                        <div class="@styleGrid">
                            <div class="image-grid">
                            @{
                                var collectionItemUsers = await _collectionItemUserServices.GetCollectionItemUserAsync(model.CollectionsModel[i].Id, model.Id);
                            }
                            @foreach (var collectionItem in collectionItems.Where(x=>x.CollectionItemTypeIsCollectible))
                            {
                                var existsCollectionItem = collectionItemUsers.Where(x => x.CollectionItemId == collectionItem.Id).Any();
                                    <div class="image-container">
                                <img id="imgCollectionItem" src="@collectionItem.Url" data-id="@collectionItem.Id"
                                @(!existsCollectionItem ? "class=opacityImage-collection-item" : "class=opacityImage-collection-item-display-full")
                                    alt="@collectionItem.Description"
                                    width="@collectionItem.CollectionItemTypeWidth"
                                    height="@collectionItem.CollectionItemTypeHeigh"/>
                                    </div>
                            }
                           
                            <div style="grid-column: span @colspanGrid" class="text_delightful">
                                <h2>@string.Format( model.CollectionsModel[i].CollectionName)</h2>
                            </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<script src="~/js/profile.js"></script>

